#textdomain wesnoth-tsg








#
# the 'experience_modifier' attribute doesn't adjust existing units' XP when difficulty is changed. Fix that here.
#
# ok, look. I have no clue why this works correctly, but for some reason it does.
# maybe I'm forcing a unit rebuild or something?
#
#define EXPERIENCE_MODIFIER_GLOBAL
#     # the first time a unit is placed, record its XP modifier
#     # NOTE - apparently this isn't needed, as modifying XP and un-modifying XP forces a rebuild
#     [event]
#         name=unit placed
#         first_time_only=no
#         {FILTER({NOT( {FILTER_WML_OBJECT easy  } )})}
#         {FILTER({NOT( {FILTER_WML_OBJECT normal} )})}
#         {FILTER({NOT( {FILTER_WML_OBJECT hard  } )})}
#         {GIVE_OBJECT_TO id=$unit.id id={ON_DIFFICULTY easy normal hard}}
#     [/event]
    
    # difficulty can only be changed at the beginning of a scenario
    # so, modify any units whose initial XP modifier doesn't match the current difficulty
    [event]
        name=prestart,refresh_experience
        [store_unit]
            {FILTER()}
            variable=preload_modify_xp_units
        [/store_unit]
        [foreach]
            array=preload_modify_xp_units
            [do]
                {STORE_UNIT_VAR id=$this_item.id id premodified_unit_id}
                {STORE_UNIT_VAR id=$this_item.id     experience     premodified_experience}
                {STORE_UNIT_VAR id=$this_item.id max_experience premodified_max_experience}
                
                # modify XP to force a unit rebuild
                # if we modify something other than XP this doesn't work
                {GIVE_OBJECT_TO id=$this_item.id (id=xp_modifier_object {EFFECT max_experience increase=1})}
                
                # remove any previous experience modifications
                # [remove_object] doesn't work on units with x,y=recall,recall so use lua instead
                [lua]
                    code = << 
                        local units = wesnoth.units.find{ id=wml.variables['premodified_unit_id'] }
                        if (units and units[1]) then units[1]:remove_modifications{ id='xp_modifier_object' } end
                    >>
                [/lua]
                
#                 # adjust max XP
#                 # NOTE - apparently this isn't needed, as modifying XP and un-modifying XP forces a rebuild
#                 [if] {HAVE_UNIT( id,search_recall_list=$this_item.id,yes {FILTER_WML_OBJECT easy} )}
#                     [then]{GIVE_OBJECT_TO id=$this_item.id (id=xp_modifier_object {EFFECT max_experience increase={ON_DIFFICULTY   0%  50% 100%}})}[/then]
#                 [/if]
#                 [if] {HAVE_UNIT( id,search_recall_list=$this_item.id,yes {FILTER_WML_OBJECT normal} )}
#                     [then]{GIVE_OBJECT_TO id=$this_item.id (id=xp_modifier_object {EFFECT max_experience increase={ON_DIFFICULTY -33%   0%  33%}})}[/then]
#                 [/if]
#                 [if] {HAVE_UNIT( id,search_recall_list=$this_item.id,yes {FILTER_WML_OBJECT hard} )}
#                     [then]{GIVE_OBJECT_TO id=$this_item.id (id=xp_modifier_object {EFFECT max_experience increase={ON_DIFFICULTY -50% -25%   0%}})}[/then]
#                 [/if]
                
                # adjust current XP 
                [modify_unit]
                    {FILTER id=$this_item.id}
                    experience="$( floor($this_unit.max_experience * $premodified_experience / $premodified_max_experience) )"
                [/modify_unit]
                {CLEAR_VARIABLE premodified_unit_id,premodified_experience,premodified_max_experience}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE preload_modify_xp_units}
    [/event]
#enddef

#define EXPERIENCE_MODIFIER_SCENARIO
    # if you change this, also change the values in EXPERIENCE_MODIFIER_GLOBAL
    experience_modifier={ON_DIFFICULTY 50 75 100}
#enddef



# 
# #define MODIFY_EXPERIENCE ID XP
#     #
#     {STORE_UNIT_VAR id={ID} id unit_id}
#     {STORE_UNIT_VAR id={ID}     experience     premodified_experience}
#     {STORE_UNIT_VAR id={ID} max_experience premodified_max_experience}
#     
#     # [remove_object] doesn't work on units with x,y=recall,recall so use lua instead
#     [lua]
#         code = << 
#             local units = wesnoth.units.find{ id=wml.variables['unit_id'] }
#             if (units and units[1]) then units[1]:remove_modifications{ id='xp_modifier_object' } end
#         >>
#     [/lua]
#     {GIVE_OBJECT_TO id={ID} (id=xp_modifier_object {EFFECT max_experience increase={XP}})}
#     [modify_unit]
#         {FILTER id={ID}}
#         experience="$( floor($this_unit.max_experience * $premodified_experience / $premodified_max_experience) )"
#     [/modify_unit]
#     {CLEAR_VARIABLE unit_id,premodified_experience,premodified_max_experience}
# #enddef
# 
# #define EXPERIENCE_MODIFIER XP
#     # the `experience_modifier` key has inconsistent behavior when changing difficulties mid-campaign, and also affects units from all sides
#     # instead, we manually implement experience scaling for just side 1
#     [event]
#         name=unit placed
#         first_time_only=no
#         {FILTER side=1}
#         {MODIFY_EXPERIENCE $unit.id {XP}}
#     [/event]
#     [event]
#         name=prestart
#         first_time_only=no
#         [store_unit]
#             {FILTER side=1}
#             variable=preload_modify_xp_units
#         [/store_unit]
#         [foreach]
#             array=preload_modify_xp_units
#             [do]{MODIFY_EXPERIENCE $this_item.id {XP}}[/do]
#         [/foreach]
#         {CLEAR_VARIABLE preload_modify_xp_units}
#     [/event]
# #enddef






#define SINGLEUNITWML_HYLAS
    type=White Mage
    id=Minister Hylas
    profile=portraits/hylas.webp
    name= _ "Minister Hylas"
    [modifications]
        {TRAIT_LOYAL_HERO}
        {TRAIT_SLOW} # having a healer is incredibly strong, so nerf Hylas with a negative trait. I hope that 4mp (and powerful stats on Gerrick/Mari) will be a sufficient handicap
    [/modifications]
#enddef
#define SINGLEUNITWML_GERRICK
    type=Veteran Infantryman
    id=Sir Gerrick
    name= _ "Sir Gerrick"
    profile=portraits/sir-gerrick.webp
    [modifications]
        {TRAIT_LOYAL_HERO}
        {TRAIT_RESILIENT}
    [/modifications]
#enddef
#define SINGLEUNITWML_MARI
    type=Veteran Fencer
    id=Mari
    name= _ "Captain Mari"
    unrenamable=yes
    [modifications]
        {TRAIT_LOYAL_HERO}
        {TRAIT_STRONG}
    [/modifications]
#enddef
#define SINGLEUNITWML_MEBRIN
    type,id,name=Lich,Mebrin,_"Mal M’Brin"
    profile="portraits/mal-mbrin.webp"
    canrecruit=yes
    [modifications]
        [object]
            [effect]
                apply_to=attack
                increase_damage={ON_DIFFICULTY -4 -2 -0}
            [/effect]
        [/object]
    [/modifications]
#enddef







#define COMPANION_DEATH_OBJECTIVES
    [objective]
        description= _ "Death of Deoran or Captain Mari"
        condition=lose
        [show_if] {HAVE_UNIT id,side=Mari,1             } {NOT({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Deoran or Sir Gerrick"
        condition=lose
        [show_if] {HAVE_UNIT id,side="Sir Gerrick",1    } {NOT({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Deoran or Minister Hylas"
        condition=lose
        [show_if] {HAVE_UNIT id,side="Minister Hylas",1 } {NOT({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Deoran, Captain Mari, or Ethiliel"
        condition=lose
        [show_if] {HAVE_UNIT id,side=Mari,1             } {AND({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Deoran, Sir Gerrick, or Ethiliel"
        condition=lose
        [show_if] {HAVE_UNIT id,side="Sir Gerrick",1    } {AND({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
    [objective]
        description= _ "Death of Deoran, Minister Hylas, or Ethiliel"
        condition=lose
        [show_if] {HAVE_UNIT id,side="Minister Hylas",1 } {AND({HAVE_UNIT id,side=Ethiliel,1})} [/show_if]
    [/objective]
#enddef







#define SG_DEATHS_EVENTS
[event]
    name=last breath
    [filter]
        id=Deoran
    [/filter]
    [message]
        speaker=unit
        image=portraits/deoran-sad.webp
        message= _ "I have failed my kingdom and duty..."
    [/message]
    [endlevel]
        result=defeat
    [/endlevel]
[/event]

[event]
    name=die
    [filter]
        id=Trapdoor
    [/filter]
    [remove_item]
        image=trapdoor
    [/remove_item]
    [message]
        speaker=Deoran
        message= _ "They’ve broken through the trapdoor and entered the refugee cellar! Even if we could still manage to win by force of arms, Westin is doomed without its people..."
    [/message]
    [endlevel]
        result=defeat
    [/endlevel]
[/event]



[event]
    name=attack
    [filter]
        id=Deoran
    [/filter]
    [filter_second]
        [not]
            type=Quintain
        [/not]
    [/filter_second]

    [if]
        [variable]
            name=cold_steel_tasted
            boolean_not_equals=yes
        [/variable]

        [then]
            [message]
                speaker=Deoran
                image=portraits/deoran-mad.webp
                message= _ "Taste cold steel!"
            [/message]

            {VARIABLE cold_steel_tasted yes}
        [/then]
    [/if]
[/event]

[event]
    name=last breath
    [filter]
        id=Mari
    [/filter]
    {FILTER_CONDITION( {VARIABLE_CONDITIONAL ignore_companion_deaths not_equals yes} )}
    [message]
        speaker=unit
        message= _ "Yeah... I should’ve figured I wouldn’t get a happy ending..."
    [/message]
    [if] {VARIABLE_CONDITIONAL ignore_companion_defeat not_equals yes}
        [then]
            [endlevel]
                result=defeat
            [/endlevel]
        [/then]
    [/if]
[/event]

[event]
    name=last breath
    [filter]
        id=Sir Gerrick
    [/filter]
    {FILTER_CONDITION( {VARIABLE_CONDITIONAL ignore_companion_deaths not_equals yes} )}
    [message]
        speaker=unit
        message= _ "I have given all in service of my kingdom..."
    [/message]
    [if] {VARIABLE_CONDITIONAL ignore_companion_defeat not_equals yes}
        [then]
            [endlevel]
                result=defeat
            [/endlevel]
        [/then]
    [/if]
[/event]

[event]
    name=last breath
    [filter]
        id=Minister Hylas
    [/filter]
    {FILTER_CONDITION( {VARIABLE_CONDITIONAL ignore_companion_deaths not_equals yes} )}
    [message]
        speaker=unit
        image=portraits/hylas.webp
        message= _ "May the Light guide you where I have failed..."
    [/message]
    [if] {VARIABLE_CONDITIONAL ignore_companion_defeat not_equals yes}
        [then]
            [endlevel]
                result=defeat
            [/endlevel]
        [/then]
    [/if]
[/event]

[event]
    name=last breath
    [filter]
        id=Ethiliel
        race=elf # not the cage in S03
    [/filter]
    [message]
        speaker=unit
        message= _ "I have lost everything helping the humans... Now they will surely perish!"
    [/message]
    [endlevel]
        result=defeat
    [/endlevel]
[/event]
#enddef
